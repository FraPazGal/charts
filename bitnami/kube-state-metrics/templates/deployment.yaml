apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  minReadySeconds: {{ .Values.minReadySeconds }}
  template:
    metadata:
      {{- if .Values.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- include "kube-state-metrics.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- end }}
      hostNetwork: {{ .Values.hostNetwork }}
      serviceAccountName: {{ template "kube-state-metrics.serviceAccountName" . }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: kube-state-metrics
          image: {{ template "kube-state-metrics.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            {{- if .Values.resources.certificatesigningrequests }}
            - --resources=certificatesigningrequests
            {{- end }}
            {{- if .Values.resources.configmaps }}
            - --resources=configmaps
            {{- end }}
            {{- if .Values.resources.cronjobs }}
            - --resources=cronjobs
            {{- end }}
            {{- if .Values.resources.daemonsets }}
            - --resources=daemonsets
            {{- end }}
            {{- if .Values.resources.deployments }}
            - --resources=deployments
            {{- end }}
            {{- if .Values.resources.endpoints }}
            - --resources=endpoints
            {{- end }}
            {{- if .Values.resources.horizontalpodautoscalers }}
            - --resources=horizontalpodautoscalers
            {{- end }}
            {{- if .Values.resources.ingresses }}
            - --resources=ingresses
            {{- end }}
            {{- if .Values.resources.jobs }}
            - --resources=jobs
            {{- end }}
            {{- if .Values.resources.limitranges }}
            - --resources=limitranges
            {{- end }}
            {{- if .Values.resources.mutatingwebhookconfigurations }}
            - --resources=mutatingwebhookconfigurations
            {{- end }}
            {{- if .Values.resources.namespaces }}
            - --resources=namespaces
            {{- end }}
            {{- if .Values.resources.networkpolicies }}
            - --resources=networkpolicies
            {{- end }}
            {{- if .Values.resources.nodes }}
            - --resources=nodes
            {{- end }}
            {{- if .Values.resources.persistentvolumeclaims }}
            - --resources=persistentvolumeclaims
            {{- end }}
            {{- if .Values.resources.persistentvolumes }}
            - --resources=persistentvolumes
            {{- end }}
            {{- if .Values.resources.poddisruptionbudgets }}
            - --resources=poddisruptionbudgets
            {{- end }}
            {{- if .Values.resources.pods }}
            - --resources=pods
            {{- end }}
            {{- if .Values.resources.replicasets }}
            - --resources=replicasets
            {{- end }}
            {{- if .Values.resources.replicationcontrollers }}
            - --resources=replicationcontrollers
            {{- end }}
            {{- if .Values.resources.resourcequotas }}
            - --resources=resourcequotas
            {{- end }}
            {{- if .Values.resources.secrets }}
            - --resources=secrets
            {{- end }}
            {{- if .Values.resources.services }}
            - --resources=services
            {{- end }}
            {{- if .Values.resources.statefulsets }}
            - --resources=statefulsets
            {{- end }}
            {{- if .Values.resources.storageclasses }}
            - --resources=storageclasses
            {{- end }}
            {{- if .Values.resources.verticalpodautoscalers }}
            - --resources=verticalpodautoscalers
            {{- end }}
            {{- if .Values.resources.validatingwebhookconfigurations }}
            - --resources=validatingwebhookconfigurations
            {{- end }}
            {{- if .Values.resources.volumeattachments }}
            - --resources=volumeattachments
            {{- end }}
            {{- if .Values.namespace }}
            - --namespaces={{ .Values.namespaces }}
            {{- end }}
            {{- range $key, $value := .Values.extraArgs }}
            {{- if $value }}
            - --{{ $key }}={{ $value }}
            {{- else }}
            - --{{ $key }}
            {{- end }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
